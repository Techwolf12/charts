# Pretix image configuration
image:
  repository: pretix/standalone
  tag: 2025.8.0
  pullPolicy: IfNotPresent
  pullSecrets: []

# Replica config
replicas:
  pretixWeb: 1
  pretixWorker: 1

cronSchedule: "*/30 * * * *"

env:
  PRETIX_PRETIX_INSTANCE_NAME: Pretix Helm
  PRETIX_PRETIX_URL: http://localhost
  PRETIX_PRETIX_CURRENCY: EUR
  PRETIX_PRETIX_DATADIR: /data
  PRETIX_PRETIX_TRUST_X_FORWARDED_FOR: on
  PRETIX_PRETIX_TRUST_X_FORWARDED_PROTO: on
  PRETIX_MAIL_FROM: test@example.com
  PRETIX_MAIL_HOST: smtp.example.com
  PRETIX_MAIL_USER: smtpuser
  PRETIX_MAIL_PASSWORD: smtppassword
  PRETIX_MAIL_PORT: 587
  PRETIX_MAIL_TLS: True
  PRETIX_DATABASE_BACKEND: postgresql
  # PRETIX_DATABASE_NAME: pretix
  # PRETIX_DATABASE_USER: pretix
  # PRETIX_DATABASE_PASSWORD: pretix
  # PRETIX_DATABASE_HOST: pretix-postgresql
  PRETIX_REDIS_LOCATION: redis://pretix-redis-master/0
  PRETIX_REDIS_SESSIONS: true
  PRETIX_CELERY_BACKEND: redis://pretix-redis-master/1
  PRETIX_CELERY_BROKER: redis://pretix-redis-master/2

# For setting custom env vars, populated from secrets
extraEnv: []
  # - name: PRETIX_DATABASE_NAME
  #   valueFrom:
  #     secretKeyRef:
  #       name: db_secret
  #       key: dbname

labels: []

# Resource limits and requests
resources:
  limits:
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Persistence configuration
persistence:
  enabled: true
  storageClassName: "local-path"
  accessMode: ReadWriteOnce
  size: 5Gi

postgresql:
  enabled: true
  auth:
    database: pretix
    username: pretix
    password: pretix
    postgresPassword: supersecureadminpassword

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false

# Ingress configuration (disabled by default)
ingress:
  enabled: false
  annotations: {}
  ingressClassName: ""
  hosts:
    - host: pretix.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

podSecurityContext:
  # runAsNonRoot: true
  fsGroup: 9968
